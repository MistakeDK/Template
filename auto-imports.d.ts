/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const DefaultLayout: typeof import('./src/layouts/DefaultLayout')['DefaultLayout']
  const Header: typeof import('./src/components/Header')['Header']
  const HomeLayout: typeof import('./src/layouts/HomeLayout')['HomeLayout']
  const IconBuilder: typeof import('./src/components/IconBuilder')['IconBuilder']
  const LayoutsDefaultLayout: typeof import('@/layouts/DefaultLayout.tsx')['DefaultLayout']
  const LayoutsHomeLayout: typeof import('@/layouts/HomeLayout.tsx')['HomeLayout']
  const LayoutsTestPageLayout: typeof import('@/layouts/TestPageLayout.tsx')['TestPageLayout']
  const LeftNav: typeof import('./src/components/LeftNav')['LeftNav']
  const LogLevel: typeof import('./src/logger/logger')['LogLevel']
  const LoggerNames: typeof import('./src/logger/logger')['LoggerNames']
  const ModalCreateCamera: typeof import('@/components/modal/CreateCamera.tsx')['CreateCamera']
  const ModalsCreateCameraModal: typeof import('@/components/modals/CreateCameraModal.tsx')['CreateCameraModal']
  const RightSidebar: typeof import('./src/components/RightSidebar')['RightSidebar']
  const TanStackRouterDevtools: typeof import('@tanstack/router-devtools')['TanStackRouterDevtools']
  const TestPageLayout: typeof import('./src/layouts/TestPageLayout')['TestPageLayout']
  const createFileRoute: typeof import('@tanstack/react-router')['createFileRoute']
  const createLazyFileRoute: typeof import('@tanstack/react-router')['createLazyFileRoute']
  const createRef: typeof import('react')['createRef']
  const createRootRoute: typeof import('@tanstack/react-router')['createRootRoute']
  const forwardRef: typeof import('react')['forwardRef']
  const generateUuid: typeof import('./src/utils/common.utils')['generateUuid']
  const getLogger: typeof import('./src/logger/logger')['getLogger']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const motion: typeof import('framer-motion')['motion']
  const startTransition: typeof import('react')['startTransition']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useNavigate: typeof import('@tanstack/react-router')['useNavigate']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useUIConfigStore: typeof import('./src/stores/ui-config-store')['useUIConfigStore']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { LogLevel, LoggerNames } from './src/logger/logger'
  import('./src/logger/logger')
}
