/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const AboutLayout: typeof import('./src/layouts/AboutLayout')['AboutLayout']
  const BTBT1: typeof import('@/components/BT/BT1.tsx')['BT1']
  const BTBT2: typeof import('@/components/BT/BT2.tsx')['BT2']
  const BTBT3: typeof import('@/components/BT/BT3.tsx')['BT3']
  const DefaultLayout: typeof import('./src/layouts/DefaultLayout')['DefaultLayout']
  const LayoutAddTab: typeof import('@/components/layout/AddTab.tsx')['AddTab']
  const LayoutCategory: typeof import('@/components/layout/Category.tsx')['Category']
  const LayoutCategoryItem: typeof import('@/components/layout/CategoryItem.tsx')['CategoryItem']
  const LayoutCategoryWrapper: typeof import('@/components/layout/CategoryWrapper.tsx')['CategoryWrapper']
  const LayoutExample: typeof import('@/components/layout/Example.tsx')['Example']
  const LayoutMyTable: typeof import('@/components/layout/MyTable.tsx')['MyTable']
  const LayoutNavbar: typeof import('@/components/layout/Navbar.tsx')['Navbar']
  const LayoutSearchInput: typeof import('@/components/layout/SearchInput.tsx')['SearchInput']
  const LayoutTabList: typeof import('@/components/layout/TabList.tsx')['TabList']
  const LayoutTabWrapper: typeof import('@/components/layout/TabWrapper.tsx')['TabWrapper']
  const LayoutsAboutLayout: typeof import('@/layouts/AboutLayout.tsx')['AboutLayout']
  const LayoutsDefaultLayout: typeof import('@/layouts/DefaultLayout.tsx')['DefaultLayout']
  const Navbar: typeof import('./src/components/Navbar')['Navbar']
  const PagesIndexHomeContent: typeof import('@/components/pages/index/HomeContent.tsx')['HomeContent']
  const TanStackRouterDevtools: typeof import('@tanstack/router-devtools')['TanStackRouterDevtools']
  const createFileRoute: typeof import('@tanstack/react-router')['createFileRoute']
  const createLazyFileRoute: typeof import('@tanstack/react-router')['createLazyFileRoute']
  const createRef: typeof import('react')['createRef']
  const createRootRoute: typeof import('@tanstack/react-router')['createRootRoute']
  const fetchFake: typeof import('./src/hooks/ApiFake.tsx')['fetchFake']
  const fetchFakeArrCategory: typeof import('./src/hooks/ApiFake')['fetchFakeArrCategory']
  const fetchFakeArrCategoryItem: typeof import('./src/hooks/ApiFake')['fetchFakeArrCategoryItem']
  const forwardRef: typeof import('react')['forwardRef']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const startTransition: typeof import('react')['startTransition']
  const tabStore: typeof import('./src/stores/my-store')['tabStore']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useMyStore: typeof import('./src/stores/my-store')['useMyStore']
  const useNavigate: typeof import('@tanstack/react-router')['useNavigate']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTabStore: typeof import('./src/stores/my-store')['useTabStore']
  const useTransition: typeof import('react')['useTransition']
}
